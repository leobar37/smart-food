// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String       @id @default(cuid())
  name     String       @default("")
  email    String       @unique @default("")
  rol      UserRolType?
  password String
}

model Client {
  id        String  @id @default(cuid())
  phone     String  @default("")
  name      String  @default("")
  lastName  String  @default("")
  direction String  @default("")
  email     String  @unique @default("")
  orders    Order[] @relation("Order_client")
}

model Product {
  id                     String      @id @default(cuid())
  photo                  Json?
  name                   String      @default("")
  count                  Int?
  price                  Float?
  excerpt                String      @default("")
  category               Category?   @relation("Product_category", fields: [categoryId], references: [id])
  categoryId             String?     @map("category")
  options                Option[]    @relation("Option_product")
  description            String      @default("")
  isAvalaible            Boolean     @default(true)
  from_OrderLine_product OrderLine[] @relation("OrderLine_product")

  @@index([categoryId])
}

model Option {
  id         String      @id @default(cuid())
  name       String      @default("")
  limit      Int?
  label      String      @default("")
  product    Product?    @relation("Option_product", fields: [productId], references: [id])
  productId  String?     @map("product")
  subOptions SubOption[] @relation("SubOption_option")

  @@index([productId])
}

model SubOption {
  id       String  @id @default(cuid())
  name     String  @default("")
  option   Option? @relation("SubOption_option", fields: [optionId], references: [id])
  optionId String? @map("option")

  @@index([optionId])
}

model Category {
  id          String    @id @default(cuid())
  name        String    @default("")
  description String    @default("")
  title       String    @default("")
  products    Product[] @relation("Product_category")
}

model OrderLine {
  id        String    @id @default(cuid())
  order     Order?    @relation("OrderLine_order", fields: [orderId], references: [id])
  orderId   String?   @map("order")
  product   Product?  @relation("OrderLine_product", fields: [productId], references: [id])
  productId String?   @map("product")
  createdAt DateTime?
  quantity  Int?
  price     Float?
  total     Float?
  selection Json?     @default("{}")

  @@index([orderId])
  @@index([productId])
}

model Order {
  id            String                  @id @default(cuid())
  orderNumber   Int                     @default(autoincrement())
  createdAt     DateTime?               @default(now())
  status        OrderStatusType?        @default(IN_CART)
  lines         OrderLine[]             @relation("OrderLine_order")
  total         Float?
  client        Client?                 @relation("Order_client", fields: [clientId], references: [id])
  clientId      String?                 @map("client")
  metadata      Json?                   @default("{}")
  paymentMethod OrderPaymentMethodType?

  @@index([clientId])
}

enum UserRolType {
  ADMIN
  STAFF
}

enum OrderStatusType {
  PENDING
  PAID
  CANCELLED
  DELIVERED
  IN_CART
}

enum OrderPaymentMethodType {
  CASH
  CREDIT_CARD
  PLIN
  YAPE
}