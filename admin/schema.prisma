// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id       String @id @default(cuid())
  name     String @default("")
  email    String @unique @default("")
  password String
}

model Client {
  id        String @id @default(cuid())
  phone     String @default("")
  name      String @default("")
  lastName  String @default("")
  direction String @default("")
  email     String @default("")
}

model Product {
  id         String    @id @default(cuid())
  photo      Json?
  name       String    @default("")
  canCount   Boolean   @default(false)
  count      Int?
  price      Float?
  category   Category? @relation("Product_category", fields: [categoryId], references: [id])
  categoryId String?   @map("category")
  options    Option[]  @relation("Option_product")

  @@index([categoryId])
}

model Option {
  id         String      @id @default(cuid())
  name       String      @default("")
  limit      Int?
  product    Product?    @relation("Option_product", fields: [productId], references: [id])
  productId  String?     @map("product")
  subOptions SubOption[] @relation("SubOption_product")

  @@index([productId])
}

model SubOption {
  id        String  @id @default(cuid())
  name      String  @default("")
  product   Option? @relation("SubOption_product", fields: [productId], references: [id])
  productId String? @map("product")

  @@index([productId])
}

model Category {
  id       String    @id @default(cuid())
  name     String    @default("")
  products Product[] @relation("Product_category")
}